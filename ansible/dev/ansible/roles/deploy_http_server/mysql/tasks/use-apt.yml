- name: Add the OS specific variables
  include_vars: "{{ ansible_distribution }}.yml"

- name: Install MySQL server apt packages
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      "{{ mysql_packages }}"

- name: Force start of mysql service.
  command: service mysql start

- name: Copy the my.cnf file
  template:
    src: "{{ ansible_distribution }}-my.cnf.j2"
    dest: "{{ mysql_conf_dir }}/my.cnf"
    owner: root
    group: root
    mode: 0640

- name: Create the directory /etc/mysql/conf.d
  file:
    path: "/etc/mysql/conf.d"
    state: directory

# 取得預設的password 再進行註冊且儲存變數
- name: get mysql version
  command: mysql --version
  register: mysql_cli_version

- name: grep temporary password for root user /var/log/mysqld.log
  shell: "echo $(grep 'temporary.*root@localhost' /var/log/mysqld.log | tail -1 | sed 's/.*root@localhost: //')"
  args:
    creates: "{{ mysql_root_home }}/.my.cnf"
  register: mysql_tmp_root_password

- name: use temporary password for root user
  set_fact:
    mysql_root_old_password: "{{ mysql_tmp_root_password.stdout }}"

- name: update mysql root password for localhost
  shell: 'mysql -e "ALTER USER ''{{ mysql_root_name }}''@''localhost'' IDENTIFIED BY ''{{ mysql_root_password }}'';" --connect-expired-password -uroot -p"{{ mysql_root_old_password }}";'
  args:
    creates: "{{ mysql_root_home }}/.my.cnf"
  when: "mysql_root_password != '' and '5.7.' in mysql_cli_version.stdout"

- name: update mysql root password for all root accounts
  mysql_user:
    name: root
    host: "{{ packages }}"
    password: "{{ mysql_root_password }}"
    login_user: '{{ mysql_root_name }}'
    login_password: '{{ mysql_root_password }}'
  vars:
    packages:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost
  when: ansible_hostname != 'localhost'

- name: update mysql root password for all root accounts
  mysql_user:
    name: root
    host: "{{ packages }}"
    password: "{{ mysql_root_password }}"
    login_user: '{{ mysql_root_name }}'
    login_password: '{{ mysql_root_password }}'
  vars:
    packages:
      - 127.0.0.1
      - ::1
      - localhost
  when: ansible_hostname == 'localhost'

- name: copy .my.cnf file with root password credentials
  template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: "{{ mysql_root_name }}"
    mode: 0600

- name: copy .my.cnf file with user password credentials
  template:
    src: "user-my.cnf.j2"
    dest: "{{ item.home }}/.my.cnf"
    owner: "{{ item.name }}"
    mode: 0600
  loop:
    "{{ mysql_users }}"

- name: remove the test database
  mysql_db:
    name: test
    state: absent

- name: Create the database's
  mysql_db:
    name: "{{ item.name }}"
    state: present
  loop:
    "{{ mysql_database }}"
  when:
    mysql_database|lower() != 'none'

- name: Create the database users
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.pass|default('password') }}"
    priv: "{{ item.priv|default('*.*:ALL,GRANT') }}"
    state: present
    host: "{{ item.host|default('localhost') }}"
  loop:
    "{{ mysql_users }}"
  when:
    mysql_users|lower() != 'none'

- name: Create the replication users
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.pass|default('password') }}"
    priv: "{{ item.priv|default('*.*:REPLICATION SLAVE') }}"
    state: present
    host: "{{ item.host|default('localhost') }}"
  loop:
    "{{ mysql_repl_users }}"
  when:
    mysql_repl_role == 'master'

- name: Force restart of mysql service.
  command: service mysql restart
