- name: Install MariaDB apt dependencies
  apt:
    name: "{{ item }}"
    state: latest
  with_nested:
    "{{ mariadb_apt_dependencies }}"

- name: Add repository key to the system
  apt_key:
    keyserver: "{{ mariadb_repo_key }}"
    id: "{{ mariadb_repo_id }}"
    state: present

- name: Install MySQL-python pip package
  pip:
    name: "{{ item }}"
    state: present
  with_items: '{{ mysql_pip_dependencies }}'

- name: Install MySQL repository
  apt_repository:
    repo: "{{ ubuntu_mariadb_repo }}"
  when:
    ansible_distribution|lower == "ubuntu"

- name: Update and upgrade apt packages
  apt:
    force_apt_get: yes
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400

- name: Install MySQL server apt packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    "{{mysql_packages}}"
  when:
      mysql_packages is defined
  notify:
    - restarted MySQL

#- name: Copy user.cnf the templates to their respestive destination
#  template:
#    src: "user-my.cnf.j2"
#    dest: "{{ mysql_user_home }}/.my.cnf"
#    owner: "{{ mysql_user_name }}"
#    mode: 0600
#  when: mysql_user_name != mysql_root_name
#
#- name: Copy root.cnf the templates to their respestive destination
#  template:
#    src: "root-my.cnf.j2"
#    dest: "{{ mysql_root_home }}/.my.cnf"
#    owner: root
#    group: root
#    mode: 0600
#  notify:
#    - restarted MySQL


#- name: Copy the templates to their respestive destination
#  template:
#    src: "{{ item.src }}"
#    dest: "{{ item.dest }}"
#    owner: root
#    group: root
#    mode: "{{ item.mode | default(644) }}"
#  with_items:
#    - { src: 'user-my.cnf.j2', dest: '/etc/mysql/my.cnf',  }
#    - { src: 'user-my.cnf.j2', dest: '~/.my.cnf', mode: '600' }
#  notify:
#    - restarted MySQL

## TODO
#- name: Update MySQL root password for all root accounts
#  mysql_user:
#    name: root
#    host: "{{ item }}"
#    password: "{{ mysql_root_password }}"
#    state: present
#  with_items:
#    - "{{ mysql_default_hosts }}"
#
## TODO
#- name: Create a new database with name 'homestead'
#  mysql_db:
#    name: "{{ mysql_database }}"
#    state: present
#
## TODO
#- name: Create a new user with name 'master' password 'password'
#  mysql_db:
#    name: "{{ mysql_user }}"
#    password: "{{ mysql_password }}"
#    state: present
#
#- name: Remove the test database
#  mysql_db:
#    name: test
#    state: absent
#  notify:
#    - restarted MySQL

#- name: update mysql root password for all root accounts
#  sudo: yes
#  mysql_user:
#    name: root
#    host: "{{ item }}"
#    password: "{{ mysql_root_password }}"
#    login_user: root
#    login_password: "{{ mysql_root_password }}"
#    check_implicit_admin: yes
#    priv: "*.*:ALL,GRANT"
#  with_items:
#    - 127.0.0.1
#    - ::1
#    - localhost
