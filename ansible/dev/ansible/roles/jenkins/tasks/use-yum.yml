---
# - name: check openjdk is not install
#   stat:
#     path: /usr/bin/java
#   register: openjdk_bin

- name: check jenkins is not install
  stat:
    path: /usr/lib/jenkins/jenkins.war
  register: jenkins_war

- name: install required package
  yum:
    name={{ item }}
    state=present
  with_items:
    - epel-release
    - wget
    - git

- name: install java-1.8.0-openjdk
  yum:
    name: java-1.8.0-openjdk
    state: present
  # when: openjdk_bin.stat.exists == False

- name: download jenkins.repo
  get_url:
    url: http://pkg.jenkins-ci.org/redhat/jenkins.repo
    dest: /etc/yum.repos.d/jenkins.repo
    mode: 0644

- name: import jenkins rpm key
  rpm_key:
    state: present
    key: https://jenkins-ci.org/redhat/jenkins-ci.org.key

- name: install jenkins
  yum:
    name: jenkins
    state: present
  when: jenkins_war.stat.exists == False

- name: enable jenins service
  service:
    name: jenkins
    enabled: yes

- name: create jenkins ssl folder
  file:
    path: /var/lib/jenkins/ssl
    owner: jenkins
    group: jenkins
    state: directory

- name: upload jenkins ssl cert
  copy:
    src={{ item.src }}
    dest={{ item.dest }}
    owner=jenkins
    group=jenkins
    mode=0600
  with_items:
  - { src: 'jenkins_ssl/server.key', dest: '/var/lib/jenkins/ssl/server.key' }
  - { src: 'jenkins_ssl/ssl.crt', dest: '/var/lib/jenkins/ssl/ssl.crt' }

- name: backup /etc/sysconfig/jenkins
  copy:
    src: /etc/sysconfig/jenkins
    dest: /etc/sysconfig/jenkins.orig
    force: no
    remote_src: True

- name: modify /etc/sysconfig/jenkins
  replace:
    dest={{ item.dst }}
    regexp={{ item.string_orig }}
    replace={{ item.string_change }}
  with_items:
  - { dst: "/etc/sysconfig/jenkins",
      string_orig: '^JENKINS_ARGS=""$',
      string_change: 'JENKINS_ARGS="--httpsPrivateKey=/var/lib/jenkins/ssl/server.key --httpsCertificate=/var/lib/jenkins/ssl/ssl.crt --httpsPort=8443 --httpPort=-1"' }

- name: create jenkins .ssh folder
  file:
    path: '/var/lib/jenkins/.ssh'
    owner: 'jenkins'
    group: 'jenkins'
    mode: '0700'
    state: 'directory'

- name: upload jenkins private key for automation
  copy:
    src: 'ssh_private_key/id_rsa'
    dest: '/var/lib/jenkins/.ssh/id_rsa'
    owner: 'jenkins'
    group: 'jenkins'
    mode: '0600'

- name: create jenkins dev folder
  file:
    path: '/var/lib/jenkins/dev'
    owner: 'jenkins'
    group: 'jenkins'
    mode: '0755'
    state: 'directory'

- name: create jenkins dev folder
  file:
    path: '/var/lib/jenkins/dev/laravel_env'
    owner: 'jenkins'
    group: 'jenkins'
    mode: '0755'
    state: 'directory'

- name: create jenkins dev folder
  file:
    path: '/var/lib/jenkins/dev/robots'
    owner: 'jenkins'
    group: 'jenkins'
    mode: '0755'
    state: 'directory'

- name: create /var/lib/jenkins/dev/cp-laravel-env
  file:
    path: '/var/lib/jenkins/dev/cp-laravel-env'
    owner: 'jenkins'
    group: 'jenkins'
    mode: '0755'
    state: 'directory'

# - name: start jenkins service
#   systemd:
#     name: jenkins
#     state: started

# - name: backup original config
#   copy:
#     src={{ item.src }}
#     dest={{ item.dest }}
#     force=no
#     remote_src=True
#   with_items:
#     - { src: '/var/lib/jenkins/config.xml', dest: '/var/lib/jenkins/config.xml.orig' }
#     - { src: '/var/lib/jenkins/credentials.xml', dest: '/var/lib/jenkins/credentials.xml.orig' }
