- name: Add the OS specific variables
  include_vars: "{{ ansible_distribution }}.yml"

- name: Install remi repo
  yum:
    name: https://repo.mysql.com/mysql57-community-release-el7-11.noarch.rpm
    state: present
  when:
    ansible_distribution == 'CentOS' and
    ansible_distribution_major_version == '7'

#- name: Install yum-utils packages
#  yum:
#    name: yum-utils
#    state: present
#
#- name: enable remi mysql repo
#  shell: yum-config-manager --enable mysql57-community

- name: Install MySQL server yum packages
  yum:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    "{{ mysql_packages }}"
  when:
    mysql_packages is defined

- name: Copy the my.cnf file
  template:
    src: "{{ ansible_distribution }}-my.cnf.j2"
    dest: "{{ mysql_conf_dir }}/my.cnf"
    owner: root
    group: root
    mode: 0640
  notify:
    - restarted MySQL on centos

- name: Create the directory /etc/mysql/conf.d
  file:
    path: "/etc/mysql/conf.d"
    state: directory
  notify:
    - restarted MySQL on centos

# 取得預設的password 再進行註冊且儲存變數
- name: grep temporary password for root user
  shell: "echo $(grep 'temporary.*root@localhost' /var/log/messages | sed 's/.*root@localhost: //')"
  args:
    creates: /root/.my.cnf
  register: mysql_tmp_root_passwort

- name: grep temporary password for root user /var/log/mysqld.log
  shell: "echo $(grep 'temporary.*root@localhost' /var/log/mysqld.log | sed 's/.*root@localhost: //')"
  args:
    creates: "{{ mysql_root_home }}/.my.cnf"
  register: mysql_tmp_root_password

- name: use temporary password for root user
  set_fact:
    mysql_root_old_password: "{{ mysql_tmp_root_password.stdout }}"

- name: debug
  debug:
    msg:
      "{{ mysql_tmp_root_password.stdout }}"

#- name: update mysql root password for localhost
##  shell: 'mysql -NBe ''SET PASSWORD FOR "{{ mysql_root_name }}"@"{{ item }}" = PASSWORD("{{ mysql_root_password }}");'''
#  shell: 'mysql -NBe "SET PASSWORD = PASSWORD(''{{ mysql_root_password }}'');" --connect-expired-password -u root -p"{{ mysql_root_old_password }}"'
#  args:
#    creates: "{{ mysql_root_home }}/.my.cnf"

#- name: Force start of mysql service.
#  command: systemctl start mysqld
#
#- name: update mysql root password for all root accounts
#  mysql_user:
#    name: root
#    host: "{{ item }}"
#    password: "{{ mysql_root_password }}"
#    check_implicit_admin: true
#  with_items:
#    - "{{ ansible_hostname }}"
#    - 127.0.0.1
#    - ::1
#    - localhost
#  when: ansible_hostname != 'localhost'
#
#- name: update mysql root password for all root accounts
#  mysql_user:
#    name: root
#    host: "{{ item }}"
#    password: "{{ mysql_root_password }}"
#  with_items:
#    - 127.0.0.1
#    - ::1
#    - localhost
#  when: ansible_hostname == 'localhost'
#
#- name: copy .my.cnf file with root password credentials
#  template:
#    src: "root-my.cnf.j2"
#    dest: "{{ mysql_root_home }}/.my.cnf"
#    owner: "{{ mysql_root_name }}"
#    mode: 0600
#  notify:
#    - restarted MySQL on centos
#
#- name: copy .my.cnf file with user password credentials
#  template:
#    src: "user-my.cnf.j2"
#    dest: "{{ mysql_user_home }}/.my.cnf"
#    owner: "{{ mysql_user_name }}"
#    mode: 0600
#  notify:
#    - restarted MySQL on centos
#
#- name: remove the test database
#  mysql_db:
#    name: test
#    state: absent
#
#- name: Create the database's
#  mysql_db:
#    name: "{{ item.name }}"
#    state: present
#  with_items:
#    - "{{ mysql_database }}"
#  when:
#    mysql_database|lower() != 'none'
#
#- name: Create the database users
#  mysql_user:
#    name: "{{ item.name }}"
#    password: "{{ item.pass|default('password') }}"
#    priv: "{{ item.priv|default('*.*:ALL,GRANT') }}"
#    state: present
#    host: "{{ item.host|default('localhost') }}"
#  with_items:
#    - "{{ mysql_users }}"
#  when:
#    mysql_users|lower() != 'none'
#  notify:
#    - restarted MySQL on centos
#
#- name: Create the replication users
#  mysql_user:
#    name: "{{ item.name }}"
#    password: "{{ item.pass|default('password') }}"
#    priv: "{{ item.priv|default('*.*:REPLICATION SLAVE') }}"
#    state: present
#    host: "{{ item.host|default('localhost') }}"
#  with_items:
#    - "{{ mysql_repl_users }}"
#  when:
#    mysql_repl_role == 'master'
#  notify:
#    - restarted MySQL on centos
